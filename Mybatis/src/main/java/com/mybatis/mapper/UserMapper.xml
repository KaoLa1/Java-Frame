<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.UserMapper">

	<sql id="query_user_where">
		<if test="ids!=null">
			<!-- 使用 foreach遍历传入ids
			collection：指定输入 对象中集合属性
			item：每个遍历生成对象中
			open：开始遍历时拼接的串
			close：结束遍历时拼接的串
			separator：遍历的两个对象中需要拼接的串
			 -->
			<foreach collection="ids" item="user_id" open="and (" close=")" separator=",">
				<!--每个遍历需要拼接的串-->
				id = #{user_id}
			</foreach>
			<!-- 实现  “ and id IN(1,10,16)”拼接 -->
			<!-- <foreach collection="ids" item="user_id" open="and id IN(" close=")" separator=",">
				每个遍历需要拼接的串
				#{user_id}
			</foreach> -->
		</if>

	</sql>

    <!-- 根据id获取用户信息 -->
    <select id="findUserById" parameterType="int" resultType="com.mybatis.entity.User">
		select * from user where id = #{id}
	</select>

    <!-- 根据用户名称模糊查询用户信息，可能返回多条
    resultType：指定就是单条记录所映射的java对象 类型
    ${}:表示拼接sql串，将接收到参数的内容不加任何修饰拼接在sql中。使用${}拼接sql，引起 sql注入
    ${value}：接收输入 参数的内容，如果传入类型是简单类型，${}中只能使用value-->
    <select id="findUserByUsername" parameterType="java.lang.String" resultType="com.mybatis.entity.User">
	   select * from user where username like '%${value}%'
	</select>
	
	<select id="findUserCount" parameterType="com.mybatis.entity.UserQueryVo" resultType="java.lang.Integer">
		SELECT count(*) from USER
	</select>
	
	<select id="findUserList" parameterType="com.mybatis.entity.UserQueryVo" resultType="com.mybatis.entity.UserCustom">
		select * from USER
		<!--where 可以自动去掉条件中的第一个and-->
		<where>
			<if test="userCustom!=null">
				<if test="userCustom.sex!=null and userCustom.sex! =''" >
					and user.sex = #{userCustom.sex}
				</if>
				<if test="userCustom.username!=null and userCustom.username=''">
					and user.username LIKE '%${userCustom.username}%'
				</if>
			</if>
		</where>
	</select>

</mapper>
